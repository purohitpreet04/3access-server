import mongoose, { Schema, model } from 'mongoose';

const assessmentSchema = new Schema({
    hasGPInfo: { type: Boolean, default: false },
    homelessHostelSupport: { type: Boolean, default: false },
    affordProperty: { type: Boolean, default: false },
    relevantCircumstances: { type: Boolean, default: false },
    bereavement: { type: Boolean, default: false },
    isYouorptnrIstd: { type: Boolean, default: false },
    incapableofwork: { type: Boolean, default: false },
    isBlind: { type: Boolean, default: false },
    ispreblind: { type: Boolean, default: false },
    CarerAllowance: { type: Boolean, default: false },
    needOvernightcare: { type: Boolean, default: false },
    grantpaymentsforvehicle: { type: Boolean, default: false },
    vehicles: { type: Boolean, default: false },
    isdistinguishingMarks: { type: Boolean, default: false },
    isfostercarer: { type: Boolean, default: false },
    isabsentathome: { type: Boolean, default: false },
    hasClaimed: { type: Boolean, default: false },
    incomeChange: { type: Boolean, default: false },
    unearnedIncomeChange: { type: Boolean, default: false },
    capitalChange: { type: Boolean, default: false },
    expensesChange: { type: Boolean, default: false },
    moveInLast12Months: { type: Boolean, default: false },
    ispartnerlivingwithyou: { type: Boolean, default: false },
    visitedUk: { type: Boolean, default: false },
    isemployerDetails: { type: Boolean, default: false },
    signuptype: { type: Boolean, required: true },
    nillIncome: { type: Boolean, default: false },
    hasNextOfKin: { type: Boolean, default: false },
    afford_rent: { type: Boolean, default: false },
    exoffender: { type: Boolean, default: false },
    terms: { type: Boolean, required: true },
    property: { type: mongoose.Types.ObjectId, ref: 'properties', required: true },
    room: { type: Number, required: true },
    signInDate: { type: Date, required: true },
    endDate: { type: Date },
    title_before_name: { type: String, default: '' },
    firstName: { type: String, required: true },
    lastName: { type: String, required: true },
    middleName: { type: String },
    tenantContactNumber: { type: String },
    tenantEmail: { type: String, unique: true, match: /\S+@\S+\.\S+/, default: "" },
    nationalInsuranceNumber: { type: String, required: true },
    gender: { type: String, enum: ['male', 'female', 'other'] },
    build: { type: String },
    claimReferenceNumber: { type: String, default: 'No' },
    maritalstatus: { type: String, enum: ['single', 'married', 'divorced', 'widowed'] },
    height: { type: String },
    shoeSize: { type: String },
    clothingSize: { type: String },
    eyeColor: { type: String },
    skinTone: { type: String },
    hairColor: { type: String },
    dateOfBirth: { type: Date },
    placeOfBirth: { type: String },
    reasonforhomelessness: { type: String },
    vehiclesdetails: { type: String },
    distinguishingMarks: { type: String },
    employerDetails: { type: String },
    address: { type: String },
    pincode: { type: String },
    city: { type: String },
    tenancy_type: { type: String },
    ukvisitedDate: { type: Date },
    partner_title_before_name: { type: String, },
    partner_firstName: { type: String },
    partner_lastName: { type: String },
    partner_middleName: { type: String },
    partner_nationalInsuranceNumber: { type: String },
    partner_dateOfBirth: { type: Date },
    roomfroChild: { type: Boolean },
    absenceReason: { type: String },
    absenceStartDate: { type: Date },
    intendToReturn: { type: String },
    subletStatus: { type: String },
    absenceDuration: { type: String },
    dateLastClaimed: { type: Date },
    lastNameClaimed: { type: String },
    localAuthority: { type: String },
    previousClaimReference: { type: String },
    incomeChangeDetails: { type: String },
    unearnedIncomeChangeDetails: { type: String },
    capitalChangeDetails: { type: String },
    expensesChangeDetails: { type: String },
    early_date: { type: Boolean },
    claim_start_date: { type: Date },
    circumstances_the_same: { type: Boolean },
    circumstances_2_details: { type: String },
    other_charges_of_tenant: { type: String },
    source_of_income: { type: String },
    total_amount: { type: String },
    how_often: { type: String },
    photo_uploaded: { type: Boolean },
    proof_of_benefit_radio: { type: Boolean },
    bereavementDetails: { type: String },
    relevantCircumstancesDetails: { type: String },
    nextOfKinName: { type: String },
    nextOfKinAddress: { type: String },
    nextOfKinContactNo: { type: String },
    nextOfKinRelation: { type: String },
    nextOfKinOtherContact: { type: String },
    nextOfKinVisitDetails: { type: String },
    gpDetails: { type: String },
    medicationNeeds: { type: String },
    nillIncomeFormFilledByOther: { type: Boolean },
    relationship: { type: String },
    reason: { type: String },
    from: { type: Date },
    signOutDate: { type: Date, default: Date.now() },
    to: { type: Date },
    noOfSavings: { type: String },
    borrowingMoneyFromFamily: { type: String },
    borrowingMoneyFromFriends: { type: String },
    usingMySavings: { type: String },
    childTaxCredit: { type: String },
    otherSupport: { type: String },
    additionalInformation: { type: String },
    supportCheckList_terms: { type: Boolean },
    licenseToOccupy_terms: { type: Boolean },
    weeklyServiceCharge_terms: { type: Boolean },
    missingPersonForm_terms: { type: Boolean },
    tenantIdConsentForm_terms: { type: Boolean },
    personalDetails_terms: { type: Boolean },
    licenseChargePayments_terms: { type: Boolean },
    fireEvacuationProcedure_terms: { type: Boolean },
    supportAgreement_terms: { type: Boolean },
    complaintsProcedureDeclaration_terms: { type: Boolean },
    confidentialityWaiverForm_terms: { type: Boolean },
    niIncomeForm_terms: { type: Boolean },
    authorizationForm_terms: { type: Boolean },
    supportServices_terms: { type: Boolean },
    supportCheckList: { type: String },
    licenseToOccupy: { type: String },
    weeklyServiceCharge: { type: String },
    missingPersonForm: { type: String },
    tenantIdConsentForm: { type: String },
    personalDetails: { type: String },
    licenseChargePayments: { type: String },
    supportAgreement: { type: String },
    fireEvacuationProcedure: { type: String },
    complaintsProcedureDeclaration: { type: String, default: '' },
    confidentialityWaiverForm: { type: String },
    niIncomeForm: { type: String, default: '' },
    authorizationForm: { type: String, default: '' },
    supportServices: { type: String },
    staffagree_terms: { type: Boolean },
    supportmansign: { type: String },
    bcc_form: {
        filename: { type: String, default: '' },
        path: { type: String, default: '' },
        name: { type: String, default: '' },
        type: { type: String, enum: ['pdf', 'image', ''], default: '' },
    },
    proof_of_benefit: {
        filename: { type: String, default: '' },
        path: { type: String, default: '' },
        name: { type: String, default: '' },
        type: { type: String, enum: ['pdf', 'image', ''], default: '' },
    },
    photo_uploaded: {
        filename: { type: String, default: '' },
        path: { type: String, default: '' },
        name: { type: String, default: '' },
        type: { type: String, enum: ['pdf', 'image', ''], default: '' },
    },
    staffSignature: { type: String, default: '' },
    addedBy: {
        type: mongoose.Schema.Types.ObjectId,
        required: true,
        refPath: 'addedByModel' // Dynamic reference based on `addedByModel`
    },
    companyid: {
        type: mongoose.Schema.Types.ObjectId,
        refPath: 'rsl'
    },
    addedByModel: {
        type: String,
        required: true,
        enum: ['User', 'Staff']  // Only allow "User" or "Staff" as values
    },
    isSignOut: { type: Number, default: 0 },
    status: { type: Number, default: 0 },
    supportWorkerSignature:{ type: String, default: '' },
    tenantSignature:{ type: String, default: '' },
    assesment: {
        subjecttoorder:{ type: String },
        supportNeeds: {
            type: [String], // Array of strings (e.g., ["tenancyFailure", "homelessnessRisk"])
            required: true,
        },
        homeNo: { type: Boolean, default: false },
        workNo: { type: Boolean, default: false },
        communicationNeeds: { type: Boolean, default: false },
        dateOfAssessment: { type: Date},
        debt: { type: Boolean, default: false },
        debts: { type: Boolean, default: false },
        gamblingIssues: { type: Boolean, default: false },
        criminalRecords: { type: Boolean, default: false },
        fullcheck: { type: Boolean, default: false },
        supportFromAgencies: { type: Boolean, default: false },
        physicalHealthcon: { type: Boolean, default: false },
        mentalHealthcon: { type: Boolean, default: false },
        prescribedMedication: { type: Boolean, default: false },
        selfHarmcon: { type: Boolean, default: false },
        drug: { type: Boolean, default: false },
        isotherRisk: { type: Boolean, default: false },
        mentalHealthdig: { type: Boolean, default: false },
        related_under_condition: { type: Boolean, default: false },
        records: [
            {
                natureOfOffence: { type: String },
                date: { type: Date },
                sentence: { type: String },
            },
        ],
        prison: { type: Boolean, default: false },
        family_support: { type: String, enum: ['yes', 'no'] },
        family_support_who: { type: String },
        currentAssessmentDate: { type: Date },
        checklist: {
            type: Map,
            of: Boolean,
        },
        preferredArea: { type: String },
        ethnicOrigin: { type: String },
        religion: { type: String },
        sexualOrientation: { type: String },
        sourceOfIncome: { type: String },
        totalAmount: { type: String },
        howOften: { type: String },
        debtdetails: { type: String },
        gamblingIssuesdetails: { type: String },
        qualifyreason: { type: String },
        tenantSignature: { type: String }, // Base64 encoded image string
        socialWorker: { type: String },
        probationOfficer: { type: String },
        probationOfficerContactNo: { type: String },
        cpn: { type: String },
        probationOfficerAddress: { type: String },
        psychiatristPsychologist: { type: String },
        physicalHealthdetails: { type: String },
        mentalHealthdetails: { type: String },
        mentalHealthdigdetails: { type: String },
        prescribedMedicationdetails: { type: String },
        related_under_condition_what: { type: String },
        related_under_condition_date: { type: String },
        whenprison: { type: String },
        reason_for_prison: { type: String },
        release_date: { type: Date },
        details: { type: String },
        when: { type: String },
        where: { type: String },
        how: { type: String },
        claiming_benefits: { type: String },
        drug_use: { type: String },
        method_of_administration: { type: String },
        administered: { type: String },
        injection_body_part: { type: String },
        drug_worker: { type: String },
        drug_team: { type: String },
        accessingBenefits: { type: String },
        budgeting: { type: String },
        reducingDebt: { type: String },
        learnToShopWisely: { type: String },
        settingUpAccount: { type: String },
        recoupMoniesOwed: { type: String },
        manageMentalHealth: { type: String },
        managePhysicalHealth: { type: String },
        followHealthyDiet: { type: String },
        maintainHygiene: { type: String },
        reduceSubstanceMisuse: { type: String },
        registerGP: { type: String },
        accessingTrainingEducation: { type: String },
        accessingEmployment: { type: String },
        accessingLeisure: { type: String },
        accessingVolunteering: { type: String },
        moveOn: { type: String },
        supportEqualityDiversity: { type: String },
        change_offending_behaviour: { type: String },
        access_support_services: { type: String },
        establishingSupportNetworks: { type: String },
        addressAntiSocialBehaviour: { type: String },
        addressOffendingBehaviour: { type: String },
        developLivingSkills: { type: String },
        maintainAccommodation: { type: String },
        minimizeRiskOfHarm: { type: String },
        violenceAggression: { type: Boolean, default: false },
        knownAssociates: { type: Boolean, default: false },
        hazardsFromOthers: { type: Boolean, default: false },
        otherRisk: { type: String },
        interim_risk_review_details: { type: String },
        family_support_level: { type: String },
        family_support_why: { type: String },
        nextAssessmentDate: { type: Date },
    }

}, {
    timestamps: true
});

const Tenants = mongoose.model('Tenants', assessmentSchema);
export default Tenants;

